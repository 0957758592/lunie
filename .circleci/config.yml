version: 2.1

aliases:
  - &VOYAGER /tmp/voyager
  - &GAIA /tmp/gaia
  - &WORKSPACE /tmp/build_output
  - &DIST /tmp/build_output/app/dist
  - &docker-node circleci/node:10.15
  - &docker-browsers circleci/node:10.15-browsers
  - &docker-go circleci/golang:1.11

commands:
  yarn-update:
    description: "[YARN] fetch new version"
    steps:
      - run:
          name: Update Yarn
          command: sudo npm -g uninstall yarn ; sudo npm -g install yarn@1.13.0
  yarn-install:
    description: "[YARN] update and install"
    steps:
      - restore_cache:
          keys:
            - v3-dependencies-root-{{ checksum "package.json" }}
            - v3-dependencies-root-

      - run: sudo npm -g uninstall yarn ; sudo npm -g install yarn@1.13.0
      - run: yarn install
      - save_cache:
          paths:
            - yarn.lock
            - node_modules
          key: v3-dependencies-root-{{ checksum "package.json" }}

  sync:
    parameters:
      from:
        type: string
      to:
        type: string
      overwrite:
        default: false
        type: boolean
    steps:
      - run:
          name: Deploy to S3
          command: "aws s3 sync << parameters.from >> << parameters.to >><<# parameters.overwrite >> --delete<</ parameters.overwrite >>"

# a reusable executor
executors:
  aws:
    docker:
      - image: cibuilds/aws:1.15

jobs:
  build:
    working_directory: *WORKSPACE
    docker:
      - image: *docker-browsers

    steps:
      - checkout
      - yarn-update
      - yarn-install
      - run: |
          mkdir -p app/dist
          CIRCLECI=true yarn build:ui
      - store_artifacts:
          path: *DIST
      - persist_to_workspace:
          root: *WORKSPACE
          paths:
            - app/dist

  # Build Gaia from the SDK source code specified by tasks/build/Gaia/COMMIT.sh.
  build-gaia:
    docker:
      - image: *docker-go

    steps:
      - checkout

      - restore_cache:
          key: v7-Gaia-{{ checksum "tasks/build/Gaia/COMMIT.sh" }}

      # If Gaia isn't in the cache then build it.
      - run: |
          if [ ! -d ~/gaia ]; then
            cd tasks/build/Gaia
            . COMMIT.sh
            TARGET=~/gaia ./build.sh
          fi

      - save_cache:
          key: v7-Gaia-{{ checksum "tasks/build/Gaia/COMMIT.sh" }}
          paths:
            - ~/gaia

      - persist_to_workspace:
          root: ~/gaia
          paths:
            - "*"

  changelogUpdated:
    docker:
      - image: *docker-browsers

    steps:
      - checkout
      - run: tasks/changelog-changed-check.sh

  lint:
    docker:
      - image: circleci/node:10.15.0

    steps:
      - checkout
      - yarn-update
      - yarn-install
      - run: yarn run lint

  testUnit:
    docker:
      - image: *docker-browsers

    steps:
      - checkout
      - yarn-update
      - yarn-install
      - run:
          name: Test
          command: yarn run test:unit
          no_output_timeout: 120

      - run:
          command: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN
          when: on_success

  security:
    docker:
      - image: *docker-browsers

    steps:
      - checkout

      - yarn-update

      - run:
          name: Audit
          command: |
            set +e

            SUMMARY="$(yarn audit | grep Severity)"
            VULNERABILITIES=".*(High|Critical).*"

            if [[ $SUMMARY =~ $VULNERABILITIES ]]; then
              echo "Unsafe dependencies found: $SUMMARY" >&2
              exit 1
            fi
            echo "Your dependencies are secure enough: $SUMMARY"
            exit 0

  testE2e:
    working_directory: *WORKSPACE
    docker:
      - image: *docker-browsers

    environment:
      - BINARY_PATH: "/home/circleci/project/builds/Gaia/linux_amd64/gaiacli"
      - NODE_BINARY_PATH: "/home/circleci/project/builds/Gaia/linux_amd64/gaiad"

    steps:
      - checkout

      - attach_workspace:
          at: builds/Gaia
      - yarn-update
      - yarn-install

      - run:
          name: Test
          command: yarn run test:e2e
          no_output_timeout: 120

      - persist_to_workspace:
          root: *VOYAGER
          paths:
            - *DIST
            # - circle.run_deploy.sh NOT NOW

      - store_artifacts:
          path: testArtifacts
          when: on_fail

  deploy2s3:
    executor: aws
    steps:
      - sync:
          from: *VOYAGER
          to: "s3://cosmos-voyager"
          overwrite: true

  #  deployment-frontend:
  #    working_directory: *WORKSPACE
  #    machine: true
  #    environment:
  #      CIRCLE_ARTIFACTS: *WORKSPACE
  #    steps:
  #      - attach_workspace:
  #          at: *WORKSPACE
  #      - run: /tmp/build_output/circle.run_deploy.sh
  #      - when:
  #        condition: << parameters.deploy >>
  #        steps:
  #          - run:
  #              name: Deploy the latest docker Image
  #              command: |
  #                bash ./circle.ebs_deploy.sh

  # Create release.
  release:
    docker:
      - image: *docker-node

    steps:
      - checkout
      - yarn-update
      - yarn-install
      - run: node tasks/createReleasePR.js

  # Publish the release to GitHub.
  publish:
    docker:
      - image: *docker-node

    steps:
      - checkout

      - attach_workspace:
          at: builds/Gaia

      - run:
          command: |
            mostRecentTag=$(git describe --abbrev=0 --tags)

            if [ $mostRecentTag = release-candidate ]; then
              set -o verbose

              # Delete the tag before testing the build in case it fails.
              git remote add bot https://${GIT_BOT_TOKEN}@github.com/cosmos/voyager.git
              git tag -d release-candidate
              git push --delete bot release-candidate

              npm -g uninstall yarn ; npm -g install yarn@1.13.0

              sudo tasks/build/installWine.sh
              yarn install

              # download network configs
              # skip as this will overwrite game of stakes
              # tasks/build/testnets/build.sh

              # build Voyager
              node tasks/build/build.js

              # test linux build
              tar -zxvf ./builds/Voyager/Cosmos_Voyager-*-Linux.tar.gz
              yarn test:exe "./Cosmos Voyager"

              node tasks/publish.js
            fi

workflows:
  version: 2
  build-and-deploy:
    jobs:
      # Static checks before
      - changelogUpdated:
          filters:
            branches:
              ignore: release

      - security:
          filters:
            branches:
              ignore: release

      - lint:
          filters:
            branches:
              ignore: release

      - testUnit:
          filters:
            branches:
              ignore: release

      - build:
          requires:
            - security
            - lint

      # on develop:
      #        build
      #          |
      #  build-deploy-backend
      #          |
      #   deployment-frontend
      #
      # in branches: build && build-test-backend

      - build-gaia:
          name: build-test-gaia
          requires:
            - build
      #          filters:
      #            branches:
      #              ignore: develop
      #      - build-gaia:
      #          deploy: true
      #          name: build-deploy-gaia
      #          requires:
      #            - build
      #          filters:
      #            branches:
      #              only: develop
      - deploy2s3:
          requires:
            - testUnit
            - build
          #            - build-deploy-gaia
          filters:
            branches:
              only: develop

      # - testE2e:
      #     requires:
      #       - buildGaia
      #     filters:
      #       branches:
      #         ignore: release

      - publish:
          requires:
            - changelogUpdated
            - build
            - testUnit
            # - testE2e
          filters:
            branches:
              only: develop

  release:
    jobs:
      - release:
          filters:
            branches:
              only: release
